
@model Quote;

<script type="text/javascript">
    $(document).ready(function () {       

    });    
    $(function () {
            $('#uploadFile').on("change", function () {
                var fileUpload = $(this);
                console.log(fileUpload);
                var file = fileUpload[0].files[0];             
                console.log(file.name);  
                var div = "<small class='text-warning'>File Selected: " + file.name + "</small>";
                $('#uploadedFile').append(div);
            });
    });
    function onDelete(){
        var div = "<small class='text-warning'>Quote with image " + @Model.selectedImage + " has been deleted</small>";
                $('#deleteFeedback').append(div);
    }

</script>
<div class="row">
    <div class="col-12">
        <h1>QuoteGenerator Admin V1.0</h1>
        <h5>Add quote to quote generator</h5>
    </div>
    <div class="col-md-6 col-sm">
        <form class="row mt-2" enctype="multipart/form-data" asp-controller="QuoteAdmin" asp-action="AddQuote">
            <div class="mb-3 col-12">
                <label for="author" class="form-label">Author</label>
                <input type="text" maxLength="100" name="author" class="form-control" id="author" placeholder="Author">
                <span asp-validation-for="@Model.author" class="text-danger"></span>
            </div>
            <div class="mb-3 col-12">
                <label for="quote" class="form-label">Quote</label>
                <textarea class="form-control" maxLength="250" 
                name="quote" id="quote" rows="3">
                </textarea>
                <span asp-validation-for="@Model.quote" class="text-danger"></span>
            </div>
            <div class="mb-3 col-12">
                <label for="permalink" class="form-label">Link</label>
                <input type="text" maxLength="100" name="permalink" class="form-control" id="permalink" placeholder="Link">
                <span asp-validation-for="@Model.permalink" class="text-danger"></span>
            </div>
            <div class="mb-3 col-12">
                <label class="btn btn-warning">
                        Browse for Quote Image <input id="uploadFile" type="file" name="selectedFile" hidden>
                </label>
                <div id="uploadedFile"></div>
            </div>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="mb-3 col-12">
                 <button type="submit"
                                class="btn btn-warning mb-3 btn-submit">Add Quote</button>
                  <span class="text-warning">@TempData["addResponse"]</span>              
            </div>
           
        </form>
        <div class="row mt-4">
            <div class="col-md col-sm">
                <h5>Delete quote from quote generator</h5>
            </div>
        </div>
        <div class="row mt-4">
             <form class="col-md col-sm" asp-controller="QuoteAdmin" asp-action="DeleteQuote">
            <div class="row ml-1">             
                <select 
                    asp-items="@Model.quotesList"
                    asp-for="@Model.id"
                    id="listQuote" 
                    class="col-12 form-control"
                    ></select>            
            </div>
            <div class="mb-3 mt-2 row ml-1">
                 <button type="submit"
                                class="btn btn-warning mb-3 btn-submit">Delete Quote</button>
                  <span class="text-warning" id="deleteFeedback">@TempData["deleteFeedBack"]</span>              
            </div>
            </form>
        </div>
    </div>

    @* <p>
    This boilerplate is the starting project folder for the Quote Generator API (Project II).
    </p>
    <p>
    See notes below:
    </p>
    <ul>
        <li>This project folder contains two web apps: the Web API and the Administration Web App.
        As a result, the project folder contains two controllers instead of the usual one:
            <ul>
            <li>QuoteAdminController handles the requests to the admin web app to add and delete quotes</li>
            <li>QuoteAPIController handles the requests to get the quote data as JSON. This would typically be called from a client side web app, but for this project you can test it with a browser request. See QuoteAPIController.cs comments for details.</li>
            </ul>
        </li>
        <li>Your app could contain one model that is shared by both the Web API and the Admin web app, or you could have two seperate models. Either way, be sure to avoid redundancy.</li>
        <li>This view is only used by the Quote Administration web app. There should be no reason to add any others to the project folder.</li>
    </ul> *@
    
</div>